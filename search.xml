<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[静态博客的搭建及其过程中出现的问题]]></title>
      <url>http://yoursite.com/2016/09/28/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%85%B6%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<blockquote>
<p>博客听起来很简单的两个字原来做起来是一件很不简单的一件事。这次的课程不仅让我学会了静态博客的搭建也让我明白，有些东西没人要求你去学但并不代表你不需要去学，不要等到你需要的时候才去重视它。</p>
</blockquote>
<h1 id="环境的搭建"><a href="#环境的搭建" class="headerlink" title="环境的搭建"></a>环境的搭建</h1><blockquote>
<p>本次静态博客的搭建采取Github+Hexo的方式，Git和node.js下载要选择符合自己电脑配置的版本，但node.js的下载建议选择推荐的稳定版这样在后续工作中会免去一些麻烦。</p>
</blockquote>
<h2 id="SSHkey的配置"><a href="#SSHkey的配置" class="headerlink" title="SSHkey的配置"></a>SSHkey的配置</h2><p>(1)生成sshkey<br>注册Github的账号后建立一个仓库，注意为了方便活命的操作仓库的命名方式为yourname.github.io。如果是第一次使用Github只需要打开Git<br>Bash执行以下命令就可以获得ssh密钥。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"youremail"</span></div></pre></td></tr></table></figure></p>
<p>然后一直按回车就行了。<br>(2)添加sshkey到Github<br>打开文件.ssh将其中的id_ras.pub中的内容复制，然后登陆github系统，点击右上角的 <em>Account Settings—&gt;SSH Public keys —&gt; add another public keys</em>将复制的内容添加到其中。<br>(3)测试是否添加成功<br>在Git Bash中执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>最后出现以下反馈时便说明配置成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hi ***(yourname)! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></div></pre></td></tr></table></figure></p>
<h2 id="Hexo的安装"><a href="#Hexo的安装" class="headerlink" title="Hexo的安装"></a>Hexo的安装</h2><p>打开Git执行以下命令安装Hexo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo -g</div></pre></td></tr></table></figure></p>
<p>新建文件夹blog，然后进入blog初始化Hexo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<p>初始化完成后启动hexo server并在浏览器中访问localhost:4000若能成功访问则hexo配置成功。(注意每一次访问localhost:4000时都需要执行hexo server命令，执行该命令后如果对本地文件进行了修改只需要刷新浏览器页面就可以看到修改后的效果)</p>
<h2 id="hexo和github的关联"><a href="#hexo和github的关联" class="headerlink" title="hexo和github的关联"></a>hexo和github的关联</h2><p>修改blog文件下的配置文件_config，将最下方的deploy属性修改成如下形式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: git@github.com:yourname/yourname.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>然后再依次执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm intall hexo-deployer-git -S  </div><div class="line">$ hexo g  <span class="comment">#生成静态网页</span></div><div class="line">$ hexo d  <span class="comment">#部署到远程Github</span></div></pre></td></tr></table></figure></p>
<p>(注意：如果安装的是最新版的Node.js执行第一个命令后会出现warning这个没多大影响。每一次更改万能本地文件后都需要执行第二三个命令。)<br>到此为止环境的搭建已经完成了，接下来就是博客的个性化和编写了。</p>
<h1 id="博客的编写与个性化"><a href="#博客的编写与个性化" class="headerlink" title="博客的编写与个性化"></a>博客的编写与个性化</h1><h2 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h2><p>打开Git bash跳转到blog目录下执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"postname"</span></div></pre></td></tr></table></figure></p>
<p>执行后会在blog\source_posts目录下生成一个.mk文件用一个markdown编译器打开进行编译，推荐使用markdown pad 2（<a href="http://wowubuntu.com/markdown/#link" target="_blank" rel="external">markdown语法说明</a>）</p>
<h2 id="个性化"><a href="#个性化" class="headerlink" title="个性化"></a>个性化</h2><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><blockquote>
<p>关于主题对于新手来说强烈推荐Next主题，这个主题是应用的比较广泛的一个，网上关于它的配置介绍的比较多配置起来比较方便，而且该主题有三种不同的形式给我们的选择较多，具体过程如下：</p>
</blockquote>
<p>在blog目录下执行如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>
<p>然后修改blog目录下的_config中的theme主题为next，如果要对主题进行某些更改则需要更改next目录下的配置文件_congig，详细情况请参考<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">Next主题配置</a>。</p>
<h3 id="第三方服务的添加"><a href="#第三方服务的添加" class="headerlink" title="第三方服务的添加"></a>第三方服务的添加</h3><p>第三方服务主要包括：评论系统、数据统计与分析、分享服务。主要操作与实现方法请参考<a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="external">Next第三方服务集成</a></p>
<h1 id="项目实现过程中遇到的问题"><a href="#项目实现过程中遇到的问题" class="headerlink" title="项目实现过程中遇到的问题"></a>项目实现过程中遇到的问题</h1><p>1.在编辑blog目录下的配置文件_config后在浏览器中打开后出现中文乱码<br>解决方法：不要用记事本的方式打开，因为记事本不会把中文转码为utf-8，使用其他编译器进行编译就行了。</p>
<p>2.无法执行hexo server命令<br>解决方法：hexo命令的执行都必须在hexo的安装目录下进行。</p>
<p>3.运行命令hexo d是无法部署到远程Github<br>解决方法：运行命令npm install hexo-deployer-git 就可以完美解决了，注意如果配置文件中的deploy属性下的repository后面接的是http链接在部署时会要求登录，建议使用ssh链接。</p>
<p>4.无论怎样尝试都无法完成部署<br>解决方法：从头再来吧！（我想不出别的办法了）</p>
<h1 id="项目后续延展"><a href="#项目后续延展" class="headerlink" title="项目后续延展"></a>项目后续延展</h1><p>静态博客大致都差不多，主要是在个性化上有很大的差别，现在使用的next主题还可以但我觉得太过于简洁，我准备在next主题上加一些自己新欢的东西，比如更改一下背景和字体。还有就是我想要完成第三方服务中的站点内容搜索。</p>
]]></content>
    </entry>
    
  
  
</search>
